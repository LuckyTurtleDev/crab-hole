name: Rust

on:
  push:
  pull_request:
  release:
    types: [released]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        id: "rust-toolchain"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: "${{runner.os}} Rust ${{steps.rust-toolchain.outputs.cachekey}} Lock ${{hashFiles('Cargo.lock')}}"
      - run: cargo test --workspace --all-features
        env:
          RUST_BACKTRACE: 1
          TG_BOT_KEY: ${{ secrets.TG_BOT_KEY }}

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  cargo_publish:
    if: ${{ github.event_name == 'release' }}
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: msrd0/cargo-publish-action@v1
        with: 
          packages: crab-hole
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  
  github_publish:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Install musl
        run: sudo apt-get update && sudo apt-get install -y musl-dev musl-tools
      - uses: dtolnay/rust-toolchain@stable
        id: "rust-toolchain"
        with:
          target: x86_64-unknown-linux-musl,aarch64-unknown-linux-musl,armv7-unknown-linux-musleabihf
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: "${{runner.os}} Rust release ${{steps.rust-toolchain.outputs.cachekey}} Lock ${{hashFiles('Cargo.lock')}}"
      - run: cargo build --release --target x86_64-unknown-linux-musl
        env:
          RUST_BACKTRACE: 1
      - run: cargo build --release --target aarch64-unknown-linux-musl
        env:
          RUST_BACKTRACE: 1
      - run: cargo build --release --target armv7-unknown-linux-musleabihf
        env:
          RUST_BACKTRACE: 1
  
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: docker
      uses: LuckyTurtleDev/easy-docker-action@main
      with:
        ghcr_password: ${{ secrets.GITHUB_TOKEN }}
        platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
        max_parallelism: 1

